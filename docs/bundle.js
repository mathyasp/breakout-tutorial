(()=>{"use strict";const t=class{constructor(t=0,i=0,s=100,h=100,e="#f00"){this.x=t,this.y=i,this.width=s,this.height=h,this.color=e}render(t){t.beginPath(),t.rect(this.x,this.y,this.width,this.height),t.fillStyle=this.color,t.fill(),t.closePath()}},i=class extends t{constructor(t,i,s=75,h=20,e="#0095DD"){super(t,i,s,h,e),this.status=!0}},s=class extends t{constructor(t=0,i=0,s=10,h="red"){super(t,i,0,0,h),this.radius=s,this.dx=2,this.dy=-2}render(t){t.beginPath(),t.arc(this.x,this.y,this.radius,0,2*Math.PI),t.fillStyle=this.color,t.fill(),t.closePath()}move(){this.x+=this.dx,this.y+=this.dy}},h=class extends t{constructor(t,i,s=75,h=10,e="#0095DD"){super(t,i,s,h,e)}},e=class extends t{constructor(t,i,s="#0095DD",h=0,e="16px Arial"){super(t,i,0,0,s),this.score=h,this.font=e}render(t){t.font=this.font,t.fillStyle=this.color,t.fillText(`Score: ${this.score}`,this.x,this.y)}update(t){this.score+=t}reset(){this.score=0}},l=class extends t{constructor(t,i,s="#0095DD",h=3,e="16px Arial"){super(t,i,0,0,s),this.lives=h,this.font=e}render(t){t.font="16px Arial",t.fillStyle="#0095DD",t.fillText(`Lives: ${this.lives}`,this.x,this.y)}loseLife(){this.lives-=1}reset(){this.lives=3}};new class{constructor(t){this.canvas=t,this.ctx=this.canvas.getContext("2d"),this.width=this.canvas.width,this.height=this.canvas.height,this.ball=new s(this.width/2,this.height-30),this.score=new e(8,20),this.lives=new l(this.width-65,20),this.paddle=new h((this.width-75)/2,this.height-10),this.rightPressed=!1,this.leftPressed=!1,this.brickRowCount=4,this.brickColumnCount=10,this.brickWidth=0,this.smallBrickWidth=30,this.bigBrickWidth=75,this.brickHeight=20,this.brickPadding=15,this.brickOffsetTop=30,this.brickOffsetLeft=22.5,this.bricks=[];for(let t=0;t<this.brickColumnCount;t+=1){this.bricks[t]=[];for(let s=0;s<this.brickRowCount;s+=1)this.bricks[t][s]=new i(0,0)}this.smallBrickColors=["#0000FF","#FF7F00","#FFFF00","#00FF00","#0000FF","#4B0082","#8B00FF","#FF1493","#00FFFF","#00FF00"],this.bigBrickColors=["#0000FF","#FFFF00","#0000FF","#8B00FF","#00FFFF"],this.draw=this.draw.bind(this)}drawBricks(){let t;for(let i=0;i<this.brickRowCount;i+=1){const s=i%2==0?10:5;for(let h=0;h<s;h+=1)!0===this.bricks[h][i].status&&(i%2==0?(this.brickWidth=this.smallBrickWidth,t=this.smallBrickColors):(this.brickWidth=this.bigBrickWidth,t=this.bigBrickColors),this.bricks[h][i].x=h*(this.brickWidth+this.brickPadding)+this.brickOffsetLeft,this.bricks[h][i].y=i*(this.brickHeight+this.brickPadding)+this.brickOffsetTop,this.bricks[h][i].width=this.brickWidth,this.bricks[h][i].height=this.brickHeight,this.bricks[h][i].color=t[h],this.bricks[h][i].render(this.ctx))}}keyDownHandler(t){"Right"===t.key||"ArrowRight"===t.key?this.rightPressed=!0:"Left"!==t.key&&"ArrowLeft"!==t.key||(this.leftPressed=!0)}keyUpHandler(t){"Right"===t.key||"ArrowRight"===t.key?this.rightPressed=!1:"Left"!==t.key&&"ArrowLeft"!==t.key||(this.leftPressed=!1)}mouseMoveHandler(t){const i=t.clientX-this.canvas.offsetLeft;i>0&&i<this.width&&(this.paddle.x=i-this.paddle.width/2)}listeners(){this.keyDownHandler=this.keyDownHandler.bind(this),this.keyUpHandler=this.keyUpHandler.bind(this),this.mouseMoveHandler=this.mouseMoveHandler.bind(this),document.addEventListener("keydown",this.keyDownHandler,!1),document.addEventListener("keyup",this.keyUpHandler,!1),document.addEventListener("mousemove",this.mouseMoveHandler,!1)}playAgain(t){const i=document.createElement("div");i.style.position="absolute",i.style.top="0",i.style.left=`${this.canvas.offsetLeft}px`,i.style.width=`${this.width}px`,i.style.height=`${this.height}px`,i.style.backgroundColor="white",i.style.display="flex",i.style.justifyContent="center",i.style.alignItems="center";let s="";s="win"===t?"Congratulations! You won!":"Game over!";const h=`\n      <div style="background-color: white; padding: 20px;">\n        <h2>${s}</h2>\n        <p>Do you want to play again?</p>\n        <button onclick="window.location.reload()">Yes</button>\n        <button onclick="alert('Thank you for playing!')">No</button>\n      </div>\n    `;i.innerHTML=h,document.body.appendChild(i)}collisionDetection(){for(let t=0;t<this.brickColumnCount;t+=1)for(let i=0;i<this.brickRowCount;i+=1){const s=this.bricks[t][i];!0===s.status&&this.ball.x>s.x&&this.ball.x<s.x+s.width&&this.ball.y>s.y&&this.ball.y<s.y+s.height&&(this.ball.dy*=-1,s.status=0,this.score.update(1),this.score.score===this.brickRowCount*this.brickColumnCount&&this.playAgain("win"))}}draw(){this.listeners(),this.ctx.clearRect(0,0,this.width,this.height),this.drawBricks(),this.ball.render(this.ctx),this.paddle.render(this.ctx),this.score.render(this.ctx),this.lives.render(this.ctx),this.collisionDetection(),(this.ball.x+this.ball.dx>this.width-this.ball.radius||this.ball.x+this.ball.dx<this.ball.radius)&&(this.ball.dx*=-1),this.ball.y+this.ball.dy<this.ball.radius?this.ball.dy*=-1:this.ball.y+this.ball.dy>this.height-this.ball.radius&&(this.ball.x>this.paddle.x&&this.ball.x<this.paddle.x+this.paddle.width?this.ball.dy*=-1:(this.lives.loseLife(),0===this.lives.lives?this.playAgain("lose"):(this.ball.x=this.width/2,this.ball.y=this.height-30,this.ball.dx=2,this.ball.dy=-2,this.paddle.x=(this.width-this.paddle.width)/2))),this.rightPressed&&this.paddle.x<this.width-this.paddle.width?this.paddle.x+=7:this.leftPressed&&this.paddle.x>0&&(this.paddle.x-=7),this.ball.x+=this.ball.dx,this.ball.y+=this.ball.dy,requestAnimationFrame(this.draw)}}(document.getElementById("myCanvas")).draw()})();